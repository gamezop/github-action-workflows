name: Elixir Image Release (Prod)

on:
  workflow_call:
    inputs:
      img-name:
        required: true
        type: string
      path-docker-file:
        required: true
        type: string
      elixir_version:
        type: string
        required: false
        default: "1.13.4"
      otp_version:
        type: string
        required: false
        default: "24.0"
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
      GO_MODULES_GITHUB_TOKEN:
        required: true

jobs:
  release_and_push:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: prod
      GITHUB_ACCESS_TOKEN: ${{ secrets.GO_MODULES_GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Extract tag version
        id: tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup BEAM
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ inputs.elixir_version }}
          otp-version: ${{ inputs.otp_version }}
          experimental-otp: true

      - name: Install and verify deps
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix deps.compile
          VERSION=$(mix get_tag)
          if [ "$VERSION" != "$RELEASE_VERSION" ]; then
            echo "Version mismatch: mix.exs=$VERSION vs tag=$RELEASE_VERSION"
            exit 1
          fi

      - name: Docker login
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and push prod image
        run: |
          mix release.image_build \
            --img-name ${{ inputs.img-name }} \
            --path-docker-file ${{ inputs.path-docker-file }} \
            --release \
            --git-tag $RELEASE_VERSION
